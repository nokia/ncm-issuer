replicaCount: 1
priorityClassName: ""

image:
  repository: docker.io/misiektoja/ncm-issuer
  tag: 1.1.2
  pullPolicy: Always
  pullSecrets: []

sidecar:
  enabled: false
  repository: docker.io/misiektoja/ncm-issuer-utils
  tag: 1.1.0
  pullPolicy: Always
  pullSecrets: []

resources:
  # Limits to cap the resource usage in case of unexpected.
  # NOTE: exceeding memory limit will cause pod to be killed by kubernetes.
  limits:
    cpu: 400m
    memory: 500Mi
  # Requests to help kubernetes start pods on a node that has sufficient capacity.
  requests:
    cpu: 400m
    memory: 500Mi

updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

rbac:
  create: true
  # If create is set to false below objects should be created manually.
  # Only rbac.sa will be used further by this chart.
  sa: ncm-issuer-sa
  binding: ncm-issuer-role-binding
  role: ncm-issuer-role

certManagerRbac:
  create: true
  namespace: cert-manager
  sa: cert-manager
  binding: cert-manager-controller-approve:ncm-certmanager-nokia-com
  role: cert-manager-controller-approve:ncm-certmanager-nokia-comv

# since NCM is outside k8s cluster, so need external connection with NCM.
# edge control is generally used to connect external network.
# prefer edge node
controller:
  nodeSelector: {}
  tolerations:
  #- key: 'is_edge'
  #  operator: 'Equal'
  #  value: 'true'
  #  effect: 'NoExecute'

service:
  name: ncm-issuer-svc
  type: ClusterIP
  externalPort: 80
  http:
    port: 80

# enabled crd : e.g. Certifier.certmanager.ncm.nokia.com
crdEnabled: true

# enable readinessProbe, livenessProbe
livenessProbe: false
readinessProbe: false

# enable leader election
enableLeaderElection: true

securityContext:
  #runAsUser: 65532
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true

metrics:
  port: 8080

prometheus:
  serviceMonitor:
    enabled: false
    selectorLabel: stable
    namespace: default

logging:
  # Set the verbosity of logging in ncm-issuer. Can be one of 'debug', 'info',
  # 'error', or any integer value in the range <1; 3> which corresponds to debug
  # levels of increasing verbosity.
  logLevel: info
  # Level at and above which stacktraces are captured (one of 'info', 'error' or
  # 'panic').
  stacktraceLevel: panic
