apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "ncm-issuer.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ncm-issuer.app" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "ncm-issuer.app" . | nindent 8 }}
    spec:
      {{- if ne .Values.rbac.sa "default" }}
      serviceAccountName: {{ .Values.rbac.sa }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Chart.Name }}
          args:
            - "--metrics-bind-address=:{{ .Values.metrics.port }}"
            {{- if and .Values.enableLeaderElection (gt (.Values.replicaCount | int64) 1) }}
            - "--leader-elect"
            {{- end }}
            - "--zap-log-level={{ .Values.logging.logLevel }}"
            - "--zap-stacktrace-level={{ .Values.logging.stacktraceLevel }}"
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
          - containerPort: {{ .Values.metrics.port }}
          env:
            - name: REP_COUNT
              value: {{ .Values.replicaCount | quote }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: tmpdir
            mountPath: /tmp
        {{- if .Values.sidecar.enabled }}
        - name: {{ .Chart.Name }}-utils
          command: ["/usr/sbin/init"]
          image: {{ .Values.sidecar.repository }}:{{ .Values.sidecar.tag }}
          imagePullPolicy: {{ .Values.sidecar.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
            runAsUser: 998
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmpdir
              mountPath: /tmp
        {{- end }}
      volumes:
      - name: tmpdir
        emptyDir: {}
      {{- if .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.controller.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations }}
      tolerations:
        {{- toYaml .Values.controller.tolerations | nindent 8 }}
      {{- end }}
